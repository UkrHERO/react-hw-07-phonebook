{"version":3,"sources":["components/Container/Container.module.css","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","redux/contacts/contacts-slice.js","App.jsx","redux/store.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","preventDefault","type","onChange","pattern","title","required","Filter","ContactList","contacts","deleteContact","map","contact","onClick","id","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContacts","mutation","contactId","url","method","invalidatesTags","createContacts","body","useFetchContactsQuery","useDeleteContactsMutation","useCreateContactsMutation","App","data","isFetching","filter","setFilter","filteredData","normalizedFilter","toLowerCase","filteredContacts","includes","some","c","alert","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,UAAY,+B,kLCKfC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,MC8DxBI,MA7Df,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KASMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACN,IAAK,OACHC,EAAQM,GACR,MACF,IAAK,SACHJ,EAAUI,GACV,MACF,QACE,SAIN,OACE,uBAAMT,SAtBa,SAAAO,GACnBA,EAAEG,iBACFV,EAASE,EAAME,GACfD,EAAQ,IACRE,EAAU,KAkBV,UACE,yCAEE,uBACEM,KAAK,OACLT,KAAK,OACLO,MAAOP,EACPU,SAAUN,EACVO,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,2CAEE,uBACEJ,KAAK,MACLT,KAAK,SACLO,MAAOL,EACPQ,SAAUN,EACVO,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,OAIZ,wBAAQJ,KAAK,SAAb,6BCxCSK,EAdA,SAAC,GAAyB,IAAvBP,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,SACvB,OACE,0DAEE,uBAAOD,KAAK,OAAOF,MAAOA,EAAOG,SAAUA,EAAUV,KAAK,aC0BjDe,G,MA5BK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC/B,OACE,6BACGD,GACCA,EAASE,KAAI,SAAAC,GAAO,OAClB,+BACE,8BACGA,EAAQnB,KADX,KACmBmB,EAAQjB,UAE3B,wBAAQO,KAAK,SAASW,QAAS,kBAAMH,EAAcE,EAAQE,KAA3D,sBAJOF,EAAQE,W,eCPdC,EAAcC,YAAU,CACnCC,YAAa,cACbC,UAAWC,YAAe,CACxBC,QAAS,iDAEXC,SAAU,CAAC,YACXC,UAAW,SAAAC,GAAO,MAAK,CACrBC,cAAeD,EAAQE,MAAM,CAC3BA,MAAO,iBAAM,aACbC,aAAc,CAAC,cAEjBC,eAAgBJ,EAAQK,SAAS,CAC/BH,MAAO,SAAAI,GAAS,MAAK,CACnBC,IAAI,aAAD,OAAeD,GAClBE,OAAQ,WAEVC,gBAAiB,CAAC,cAEpBC,eAAgBV,EAAQK,SAAS,CAC/BH,MAAO,kBAAuB,CAC5BK,IAAK,YACLC,OAAQ,OACRG,KAAM,CACJzC,KAJG,EAAGA,KAKNE,OALG,EAASA,UAQhBqC,gBAAiB,CAAC,kBAMtBG,EAGEpB,EAHFoB,sBACAC,EAEErB,EAFFqB,0BACAC,EACEtB,EADFsB,0BCgBaC,MA1Cf,WACE,MAAyBD,IAAlBJ,EAAP,oBACA,EAAuCE,IAAzB1B,EAAd,EAAQ8B,KAAgBC,EAAxB,EAAwBA,WACxB,EAAyBJ,IAAlBT,EAAP,oBACA,EAA4BnC,mBAAS,IAArC,mBAAOiD,EAAP,KAAeC,EAAf,KAoBMC,EARmB,WACvB,GAAIH,EAAY,OAAO/B,EACvB,IAAMmC,EAAmBH,EAAOI,cAC1BC,EAAmBrC,EAASgC,QAAO,SAAA7B,GAAO,OAC9CA,EAAQnB,KAAKoD,cAAcE,SAASH,MAEtC,OAAOE,EAEYA,GAOrB,OACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,CAAavD,SA5BE,SAACE,EAAME,GAExB,GADkBc,EAASuC,MAAK,SAAAC,GAAC,OAAIA,EAAExD,OAASA,KAE9C,OAAOyD,MAAM,GAAD,OAAIzD,EAAJ,6BAEdwC,EAAe,CAAExC,OAAME,cAwBrB,0CACA,cAAC,EAAD,CAAQK,MAAOyC,EAAQtC,SAtBN,SAAAL,GAAC,OAAI4C,EAAU5C,EAAEC,cAAcC,UAuBhD,cAAC,EAAD,CAAaS,SAAUkC,EAAcjC,cAXnB,SAAAI,GACpBL,EAASgC,QAAO,SAAA7B,GAAO,OAAIA,EAAQE,KAAOA,KAC1Ca,EAAeb,U,8BCpCNqC,EAAQC,YAAe,CAClCC,QAAQ,eACLtC,EAAYE,YAAcF,EAAYsC,SAEzCC,UAAUC,EACVC,WAAY,SAAAC,GAAoB,4BAC3BA,KAD2B,CAE9B1C,EAAYyC,gBCHhBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.e09e93bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1TCr1\"};","import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onChange} name=\"find\" />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts &&\r\n        contacts.map(contact => (\r\n          <li key={contact.id}>\r\n            <p>\r\n              {contact.name}: {contact.number}\r\n            </p>\r\n            <button type=\"button\" onClick={() => deleteContact(contact.id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61ba493848df2f0017e5aa39.mockapi.io/',\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contacts'],\n    }),\n    deleteContacts: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    createContacts: builder.mutation({\n      query: ({ name, number }) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: {\n          name,\n          number,\n        },\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactsMutation,\n  useCreateContactsMutation,\n} = contactsApi;\n","import React, { useState } from 'react';\r\nimport Container from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport Filter from './components/Filter/Filter';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport {\r\n  useFetchContactsQuery,\r\n  useDeleteContactsMutation,\r\n  useCreateContactsMutation,\r\n} from './redux/contacts/contacts-slice';\r\n\r\nfunction App() {\r\n  const [createContacts] = useCreateContactsMutation();\r\n  const { data: contacts, isFetching } = useFetchContactsQuery();\r\n  const [deleteContacts] = useDeleteContactsMutation();\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const addContact = (name, number) => {\r\n    const dublicate = contacts.some(c => c.name === name);\r\n    if (dublicate) {\r\n      return alert(`${name} is already in contacts.`);\r\n    }\r\n    createContacts({ name, number });\r\n  };\r\n\r\n  const changeFilter = e => setFilter(e.currentTarget.value);\r\n\r\n  const filteredContacts = () => {\r\n    if (isFetching) return contacts;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const filteredContacts = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    return filteredContacts;\r\n  };\r\n  const filteredData = filteredContacts();\r\n\r\n  const deleteContact = id => {\r\n    contacts.filter(contact => contact.id !== id);\r\n    deleteContacts(id);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm onSubmit={addContact} />\r\n      <h2>Contacts</h2>\r\n      <Filter value={filter} onChange={changeFilter} />\r\n      <ContactList contacts={filteredData} deleteContact={deleteContact} />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport { contactsApi } from './contacts/contacts-slice';\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}